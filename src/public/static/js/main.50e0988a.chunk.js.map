{"version":3,"sources":["services/fetch.js","types/types.js","actions/ui.js","actions/images.js","actions/auth.js","components/loading/Loading.js","pages/home/HomePage.js","components/ui/Button.js","pages/login/LoginPage.js","pages/register/RegisterPage.js","pages/upload/UploadPage.js","components/navbar/Navbar.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","reducers/authReducer.js","reducers/imageReducr.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","ImagesCrudApp.js","index.js"],"names":["baseUrl","process","simpleFetch","endpoint","data","method","url","fetch","headers","body","JSON","stringify","tokenFetch","token","localStorage","getItem","tokenFetchMultipart","types","uiSetError","msg","type","payload","uiSetLoading","uiStopLoading","uiRemoveError","startUploadingLoading","imageUploaded","image","getImages","images","imageDeleted","startLogout","dispatch","clear","logout","checkingFinish","login","user","Loading","className","HomePage","useDispatch","useSelector","state","images_filtered","useState","isSelected","setIsSelected","useEffect","a","resp","json","ok","console","log","handleDeleteImage","alert","map","img","key","asset_id","onClick","id","_id","src","img_path","alt","title","style","top","right","to","Button","text","props","LoginPage","ui","errorForm","loading","useForm","register","handleSubmit","errors","onSubmit","email","password","setItem","Date","getTime","uid","name","startLogin","placeholder","autoComplete","ref","required","pattern","value","message","minLength","RegisterPage","startRegister","UploadPage","redirect","imgPath","setImgPath","document","getElementById","click","description","getState","formData","FormData","append","startImageUpload","accept","onChange","e","file","target","files","window","URL","createObjectURL","Navbar","zIndex","val","PrivateRoute","isAuth","Component","component","rest","PublicRoute","AppRouter","auth","checking","exct","path","exact","initialState","initState","uploading","rootReducer","combineReducers","action","filter","i","toLowerCase","filtered","includes","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ImagesCrudApp","ReactDOM","render"],"mappings":"2QAAMA,EAAUC,kDAEHC,EAAc,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAE3CC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAc,QAAXE,EACQE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAMpBQ,EAAa,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAC1CC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAc,QAAXV,EACQE,MAAMD,EAAM,CACfD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MAKpBY,EAAsB,SAACb,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACnDC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAc,QAAXV,EACQE,MAAMD,EAAM,CACfD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,UAAWK,GAEfJ,KAAML,KC1DLa,EAEG,sBAFHA,EAGM,yBAHNA,EAIK,mBAJLA,EAKQ,sBALRA,EAOW,qCAPXA,EAWE,eAXFA,EAaG,gBAbHA,EAgBU,sCAhBVA,EAkBK,sBAlBLA,EAmBM,iBAnBNA,EAqBC,mBArBDA,EAsBI,qBAtBJA,EAuBK,sBCtBLC,EAAa,SAACC,GAAD,MAAU,CAChCC,KAAMH,EACNI,QAASF,IAGAG,EAAe,iBAAO,CAACF,KAAMH,IAC7BM,EAAgB,iBAAO,CAACH,KAAMH,IAE9BO,EAAgB,iBAAO,CAAEJ,KAAMH,ICiDtCQ,EAAwB,iBAAO,CACjCL,KAAMH,IASJS,EAAgB,SAACC,GAAD,MAAY,CAC9BP,KAAMH,EACNI,QAASM,IAGPC,EAAY,SAACC,GAAD,MAAa,CAC3BT,KAAMH,EACNI,QAASQ,IAGPC,EAAe,SAACH,GAAD,MAAY,CAC7BP,KAAMH,EACNI,QAASM,ICAAI,EAAc,WACvB,OAAO,SAACC,GACJlB,aAAamB,QACbD,EAAUE,KACVF,EDD2B,CAACZ,KAAMH,MCK7BkB,EAAiB,iBAAO,CAACf,KAAMH,IAG/BmB,EAAQ,SAACC,GAAD,MAAW,CAC5BjB,KAAMH,EACNI,QAASgB,IAGPH,EAAS,iBAAO,CAACd,KAAMH,IC/FhBqB,G,MAAU,WACnB,OACI,yBAAKC,UAAU,oBAEX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,kB,QCVlBC,G,MAAW,WAEpB,IAAMR,EAAWS,cACQZ,EAAWa,aAAY,SAAAC,GAAK,OAAIA,EAAMd,UAAvDe,gBAHkB,EAIUC,mBAAS,MAJnB,mBAInBC,EAJmB,KAIPC,EAJO,KAM1BC,qBAAW,WACPhB,EHiBJ,uCAAO,WAAOA,GAAP,iBAAAiB,EAAA,sEAEgBrC,EAAW,QAF3B,cAEGsC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG1C,EAHH,QAKK2C,GACJpB,EAAUJ,EAAUnB,EAAKoB,SAEzBwB,QAAQC,IAAI7C,EAAKU,KARlB,2CAAP,yDGhBG,CAACa,IAEJ,IAQMuB,EAAoB,WHqBE,IAAC5B,EGpBzBK,GHoByBL,EGpBGmB,EHqBhC,uCAAO,WAAOd,GAAP,iBAAAiB,EAAA,sEAEgBrC,EAAW,OAAD,OAAQe,GAAS,GAAI,UAF/C,cAEGuB,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG1C,EAHH,QAKK2C,GACJpB,EAAUF,EAAcH,IAExB6B,MAAO/C,EAAKU,KARb,2CAAP,yDGlBA,OACI,yBAAKoB,UAAU,2CAEX,yBAAKA,UAAU,4BAEPV,EAAO4B,KAAI,SAACC,GAAD,OACP,yBACIC,IAAKD,EAAIE,SACTrB,UAAU,gCACVsB,QAAU,kBArBNC,EAqB+BJ,EAAIK,SAnBvDhB,EADDD,GAAcA,IAAegB,EACd,KAEAA,GAJK,IAACA,IAuBJ,yBACIE,IAAKN,EAAIO,SACTC,IAAKR,EAAIS,MACT5B,UAAS,mBAAgBO,IAAeY,EAAIK,KAAQ,iBAGnDjB,GAAcY,EAAIK,MAAQjB,GAE3B,4BACIP,UAAU,wFACV6B,MAAO,CAACC,IAAK,KAAMC,MAAO,MAC1BT,QAAUN,GAEV,uBAAGhB,UAAU,uBAQrC,kBAAC,IAAD,CAAMgC,GAAG,UAAUhC,UAAU,yCACzB,uBAAGA,UAAU,oB,gBC1DhBiC,EAAS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,wBAC1C,OACI,0CACInC,UAAU,8FACNmC,GAGFD,ICDDE,EAAY,WAAO,IAAD,EAEIjC,aAAY,SAAAC,GAAK,OAAIA,EAAMiC,MAAlDC,EAFmB,EAEnBA,UAAWC,EAFQ,EAERA,QACb9C,EAAWS,cAHU,EAKesC,cAAlCC,EALmB,EAKnBA,SAAUC,EALS,EAKTA,aAAcC,EALL,EAKKA,OAYhC,OACI,yBAAK3C,UAAU,qCAEX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,gGACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,sBAAd,cAA+C,0BAAMA,UAAU,kBAAhB,gBAA/C,KAEKsC,EAAUzB,IAAO,uBAAGb,UAAU,gBAAb,IAAgCsC,EAAU1D,IAA1C,MAG1B,0BAAMgE,SAAWF,GArBb,SAAC7E,GACb0E,IACAzB,QAAQC,IAAI,cACZtB,EAAUV,KACVU,EJac,SAAC,GAAuB,IAAtBoD,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC/B,8CAAO,WAAOrD,GAAP,iBAAAiB,EAAA,sEAEgB/C,EAAY,aAAc,CAAEkF,QAAOC,YAAY,QAF/D,cAEGnC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG1C,EAHH,QAKK2C,IACJtC,aAAawE,QAAQ,QAAS7E,EAAKI,OACnCC,aAAawE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDxD,EAAUI,EAAM,CACZqD,IAAKhF,EAAKgF,IACVC,KAAMjF,EAAKiF,QAEf1D,EAAUR,MAEVQ,EAAUd,EAAW,CACjB2D,UAAW,CACPzB,IAAI,EACJjC,IAAKV,EAAKU,QAItBa,EAAUT,KAtBP,2CAAP,sDIdkBoE,CAAWvF,SAmBT,yBAAKmC,UAAU,QACX,wCACA,2BACInB,KAAK,QACLmB,UAAU,+DACVqD,YAAY,mBACZC,aAAa,MACbH,KAAK,QACLI,IAAMd,EAAS,CACXe,UAAU,EACVC,QAAS,CACLC,MAAO,2CACPC,QAAS,6BAIrB,uBAAG3D,UAAU,gBACP2C,EAAOE,OAAS,0BAG1B,yBAAK7C,UAAU,QACX,2CACA,2BACInB,KAAK,WACLwE,YAAY,WACZrD,UAAU,+DACVmD,KAAK,WACLI,IAAKd,EAAS,CACVe,UAAU,EACVI,UAAW,MAGlB,uBAAG5D,UAAU,gBACR2C,EAAOG,UAAY,2CAG7B,yBAAK9C,UAAU,qBACZ,kBAAC,EAAD,CAAQkC,KAAK,UAETK,GAAW,uBAAGvC,UAAU,iCAG/B,yBAAKA,UAAU,QACX,uBAAGA,UAAU,iBAAb,yBAEI,kBAAC,IAAD,CAAMgC,GAAG,YAAYhC,UAAU,kBAA/B,yBC5EnB6D,EAAe,WAAO,IAAD,EAEC1D,aAAY,SAAAC,GAAK,OAAIA,EAAMiC,MAAlDC,EAFsB,EAEtBA,UAAWC,EAFW,EAEXA,QACb9C,EAAWS,cAHa,EAKYsC,cAAlCC,EALsB,EAKtBA,SAAUC,EALY,EAKZA,aAAcC,EALF,EAKEA,OAWhC,OACI,yBAAK3C,UAAU,6BAEX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,iGACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,sBAAd,cAA+C,0BAAMA,UAAU,kBAAhB,gBAA/C,KAEKsC,EAAUzB,IAAO,uBAAGb,UAAU,gBAAb,IAAgCsC,EAAU1D,IAA1C,MAI1B,0BAAMgE,SAAWF,GArBV,SAAC7E,GACpBiD,QAAQC,IAAI,UACRwB,IACA9C,EAAUV,KACVU,ELdiB,SAAC,GAA6B,IAA5B0D,EAA2B,EAA3BA,KAAMN,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxC,8CAAO,WAAOrD,GAAP,iBAAAiB,EAAA,sEAEgB/C,EAAY,WAAY,CAAEwF,OAAMN,QAAOC,YAAY,QAFnE,cAEGnC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG1C,EAHH,QAKK2C,IACJtC,aAAawE,QAAQ,QAAS7E,EAAKI,OACnCC,aAAawE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDxD,EAAUI,EAAM,CACZqD,IAAKhF,EAAKgF,IACVC,KAAMjF,EAAKiF,QAEf1D,EAAUR,MAEVQ,EAAUd,EAAW,CACjB2D,UAAW,CACPzB,IAAI,EACJjC,IAAKV,EAAKU,QAItBa,EAAUT,KAtBP,2CAAP,sDKakB8E,CAAcjG,SAkBZ,yBAAKmC,UAAU,QACX,uCACA,2BACInB,KAAK,OACLmB,UAAU,+DACVqD,YAAY,OACZC,aAAa,MACbH,KAAK,OACLI,IAAMd,EAAS,CAAEe,UAAU,MAG/B,uBAAGxD,UAAU,gBACR2C,EAAOQ,MAAQ,yBAGxB,yBAAKnD,UAAU,QACX,wCACA,2BACInB,KAAK,QACLmB,UAAU,+DACVqD,YAAY,mBACZC,aAAa,MACbH,KAAK,QACLI,IAAMd,EAAS,CACXe,UAAU,EACVC,QAAS,CACLC,MAAO,2CACPC,QAAS,6BAIrB,uBAAG3D,UAAU,gBACP2C,EAAOE,OAAS,0BAG1B,yBAAK7C,UAAU,QACX,2CACA,2BACInB,KAAK,WACLwE,YAAY,WACZrD,UAAU,+DACVmD,KAAK,WACLI,IAAKd,EAAS,CACVe,UAAU,EACVI,UAAW,MAGlB,uBAAG5D,UAAU,gBACR2C,EAAOG,UAAY,2CAG7B,yBAAK9C,UAAU,qBACZ,kBAAC,EAAD,CAAQkC,KAAK,YAETK,GAAW,uBAAGvC,UAAU,iCAG/B,yBAAKA,UAAU,QACX,uBAAGA,UAAU,iBAAb,4BAC6B,kBAAC,IAAD,CAAMgC,GAAG,SAAShC,UAAU,kBAA5B,kB,QCxF5C+D,EAAa,WAEtB,IAAMtE,EAAWS,cACTqC,EAAYpC,aAAY,SAAAC,GAAK,OAAIA,EAAMiC,MAAvCE,QACAyB,EAAa7D,aAAY,SAAAC,GAAK,OAAIA,EAAMd,UAAxC0E,SAJoB,EAME1D,mBAAS,MANX,mBAMrB2D,EANqB,KAMZC,EANY,OAOe1B,oBAAnCC,EAPoB,EAOpBA,SAAUC,EAPU,EAOVA,aAAcC,EAPJ,EAOIA,OAyBhC,OAAGqB,EAEK,kBAAC,IAAD,CAAUhC,GAAIgC,IAMlB,yBAAKhE,UAAU,sCACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,yBAGJiE,GACH,yBAAKjE,UAAU,qFACX,uBACIA,UAAU,qCACVsB,QA7BD,WACvB6C,SAASC,eAAe,gBAAgBC,WA8BhB,uBAAGrE,UAAU,QAAb,sBAMNiE,GACF,yBAAKjE,UAAU,YACV,yBACGyB,IAAMwC,EACNtC,IAAI,GACJ3B,UAAU,mBACX,4BACKA,UAAU,wFACV6B,MAAO,CAACC,IAAK,MAAOC,MAAO,OAC3BT,QAAS,kBAAOiB,GAAW2B,EAAW,QAEtC,uBAAGlE,UAAU,oBAOjC,yBAAKA,UAAU,eACX,0BAAO4C,SAAWF,GAnEV,SAAC7E,IAGjB0E,GAAa0B,IACbxE,EAAUV,KACVU,EPhBoB,SAAC,GAAoC,IAAnC0B,EAAkC,EAAlCA,IAAKS,EAA6B,EAA7BA,MAA6B,IAAtB0C,mBAAsB,MAAR,GAAQ,EAChE,8CAAO,WAAO7E,EAAU8E,GAAjB,mBAAA7D,EAAA,6DACHjB,EAAUP,MAEJsF,EAAW,IAAIC,UACZC,OAAO,MAAOvD,EAAI,IAC3BqD,EAASE,OAAO,QAAS9C,GACzB4C,EAASE,OAAO,cAAeJ,GAN5B,SAQgB7F,EAAoB,UAAW+F,EAAU,QARzD,cAQG7D,EARH,iBASgBA,EAAKC,OATrB,SASG1C,EATH,QAWK2C,GACJpB,EAAUN,EAAcjB,EAAKkB,QAG7B6B,MAAM/C,EAAKU,KAEfa,EAAUT,KAjBP,4CAAP,wDOekB2F,CAAiB9G,SA+Df,yBAAKmC,UAAU,oBACX,2BACInB,KAAK,OACLmB,UAAU,SACVuB,GAAG,eACHqD,OAAO,UACPC,SA3DH,SAACC,GACtB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACzBF,GACCb,EAAWgB,OAAOC,IAAIC,gBAAgBL,KAyDlB5B,KAAK,MACLI,IAAKd,EAAS,CAACe,UAAU,MACzB,uBAAGxD,UAAU,gBACP2C,EAAOxB,KAAO,0BAI5B,yBAAKnB,UAAU,oBACX,2BAAOA,UAAU,sEAAjB,SAGA,2BACIA,UAAU,6KACVnB,KAAK,OACLyE,aAAa,MACbD,YAAY,QACZF,KAAK,QACLI,IAAKd,EAAS,CAACe,UAAU,MAE7B,uBAAGxD,UAAU,gBACP2C,EAAOf,OAAS,sBAG1B,yBAAK5B,UAAU,oBACX,2BAAOA,UAAU,sEAAjB,eAGA,8BACIA,UAAU,6KACTmD,KAAK,cACLI,IAAMd,OAIf,yBAAKzC,UAAU,gCACX,kBAAC,EAAD,CAAQkC,KAAK,iBAEVK,GAAW,uBAAGvC,UAAU,sCC3H1CqF,EAAS,WAElB,IAAM5F,EAAWS,cAWjB,OACI,yBAAKF,UAAU,uFAAuF6B,MAAO,CAACyD,OAAQ,QAClH,yBAAKtF,UAAU,gDACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CAAMgC,GAAG,IAAIhC,UAAU,2BAAvB,gBAGR,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,YACX,2BACInB,KAAK,OACLmB,UAAU,+PACVqD,YAAY,SACZwB,SAzBN,SAACC,GACvB,IAAMS,EAAMT,EAAEE,OAAOtB,MACrBjE,ERoDqC,CACzCZ,KAAMH,EACNI,QQtDgCyG,OAyBJ,yBAAKvF,UAAU,wEACX,uBAAIA,UAAU,mCAI1B,yBAAKA,UAAU,4DACX,yBAAKA,UAAU,iBACX,4BAAQsB,QA7Bf,WACjB7B,EAAUD,MA4B6CQ,UAAU,8BAAzC,iBCxCnBwF,EAAe,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,OAAmBC,EAAyB,EAApCC,UAAyBC,EAAW,sCAEvE,OACI,oCACI,kBAAC,EAAD,MACC,kBAAC,IAAD,iBACOA,EADP,CAEGD,UAAY,SAACxD,GAAD,OACPsD,EACC,kBAACC,EAAevD,GAChB,kBAAC,IAAD,CAAUH,GAAG,iBCXtB6D,GAAc,SAAC,GAA+C,IAA7CJ,EAA4C,EAA5CA,OAAmBC,EAAyB,EAApCC,UAAyBC,EAAW,sCACtE,OACI,kBAAC,IAAD,iBACSA,EADT,CAEID,UAAY,SAACxD,GAAD,OACPsD,EACC,kBAAC,IAAD,CAAUzD,GAAG,MACb,kBAAC0D,EAAevD,QCMrB2D,GAAY,WAGrB,IAAMrG,EAAWS,cAHU,EAKDC,aAAY,SAAAC,GAAK,OAAIA,EAAM2F,QAA7CC,EALmB,EAKnBA,SAAU9C,EALS,EAKTA,IAMlB,OAJAzC,qBAAU,WACNhB,EVsCJ,uCAAO,WAAOA,GAAP,iBAAAiB,EAAA,sEAEgBrC,EAAW,cAF3B,cAEGsC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG1C,EAHH,QAKK2C,IACJtC,aAAawE,QAAQ,QAAS7E,EAAKI,OACnCC,aAAawE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDxD,EAAUI,EAAM,CACZqD,IAAKhF,EAAKgF,IACVC,KAAMjF,EAAKiF,SAGf1D,EAAUG,KAdX,2CAAP,yDUrCG,CAACH,IAEDuG,EACS,kBAAC,EAAD,MAMR,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KAEI,kBAAC,GAAD,CACIC,MAAI,EACJC,KAAK,SACLP,UAAYvD,EACZqD,SAAWvC,IAEf,kBAAC,GAAD,CACI+C,MAAI,EACJC,KAAK,YACLP,UAAY9B,EACZ4B,SAAWvC,IAGf,kBAAC,EAAD,CACIiD,OAAK,EACLD,KAAK,IACLP,UAAY1F,EACZwF,SAAWvC,IAEf,kBAAC,EAAD,CACIiD,OAAK,EACLD,KAAK,UACLP,UAAY5B,EACZ0B,SAAWvC,IAGf,kBAAC,IAAD,CAAUlB,GAAG,U,0BC7D3BoE,GAAe,CACjBJ,UAAU,G,QCFRK,GAAY,CACd/G,OAAQ,GACRe,gBAAiB,GACjBiG,WAAW,EACXtC,SAAU,MCJRoC,GAAe,CACjB9D,UAAW,CACPzB,IAAI,EACJjC,IAAK,MAET2D,SAAS,GCDAgE,GAAcC,aAAgB,CACvCT,KHAuB,WAAmC,IAAlC3F,EAAiC,uDAAzBgG,GAAcK,EAAW,uCAIzD,OAAQA,EAAO5H,MAEX,KAAKH,EACD,OAAO,6BACA0B,GADP,IAEI4F,UAAU,GACPS,EAAO3H,SAGlB,KAAKJ,EACD,MAAO,CACHsH,UAAU,GAGlB,KAAKtH,EACD,OAAO,6BACA0B,GADP,IAEI4F,UAAU,IAGlB,QACI,OAAO5F,IGxBfiC,GDEqB,WAAoC,IAAnCjC,EAAkC,uDAA1BgG,GAAcK,EAAY,uCAExD,OAAQA,EAAO5H,MAEX,KAAKH,EACD,OAAO,6BACA0B,GACAqG,EAAO3H,SAGlB,KAAKJ,EACD,OAAO0H,GAEX,KAAK1H,EACD,OAAO,6BACA0B,GADP,IAEImC,SAAS,IAGjB,KAAK7D,EACD,OAAO,6BACA0B,GADP,IAEImC,SAAS,IAGjB,QACI,OAAOnC,IC3Bfd,OFCwB,WAAgC,IAA/Bc,EAA8B,uDAAtBiG,GAAWI,EAAW,uCAEvD,OAAQA,EAAO5H,MACX,KAAKH,EACD,OAAO,6BACA0B,GADP,IAEIkG,WAAW,IAGnB,KAAK5H,EACD,OAAO,6BACA0B,GADP,IAEId,OAAO,GAAD,oBAAMc,EAAMd,QAAZ,CAAoBmH,EAAO3H,UACjCuB,gBAAgB,GAAD,oBAAMD,EAAMd,QAAZ,CAAoBmH,EAAO3H,UAC1CwH,WAAW,EACXtC,SAAU,MAGlB,KAAKtF,EACD,OAAO,6BACA0B,GADP,IAEId,OAAQc,EAAMd,OAAOoH,QACjB,SAAAC,GAAC,OAAKA,EAAEnF,MAAQiF,EAAO3H,WAE3BuB,gBAAiBD,EAAMC,gBAAgBqG,QACnC,SAAAC,GAAC,OAAKA,EAAEnF,MAAQiF,EAAO3H,aAInC,KAAKJ,EACD,OAAO,6BACA0B,GADP,IAEId,OAAO,aAAKmH,EAAO3H,SACnBuB,gBAAgB,aAAKoG,EAAO3H,SAC5BkF,SAAU,OAGlB,KAAKtF,EACD,IAAMgF,EAAQ+C,EAAO3H,QAAQ8H,cACvBC,EAAWzG,EAAMd,OAAOoH,QAAO,SAACnB,GAAD,OAASA,EAAI3D,MAAMgF,cAAcE,SAASpD,MAC/E,OAAO,6BACAtD,GADP,IAEIC,gBAAiBwG,IAGzB,KAAKnI,EACD,OAAO2H,GAEX,QACI,OAAOjG,MGtDb2G,GAAsC,qBAAX7B,QAA0BA,OAAO8B,sCAAyCC,KAE9FC,GAAQC,aACjBZ,GACAQ,GACIK,aAAgBC,QCLXC,GAAgB,WAEzB,OAEI,kBAAC,IAAD,CAAUJ,MAAQA,IACd,kBAAC,GAAD,QCNZK,IAASC,OACP,kBAAC,GAAD,MACArD,SAASC,eAAe,W","file":"static/js/main.50e0988a.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const simpleFetch = (endpoint, data, method = 'GET') => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const tokenFetch = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET') {\r\n        return fetch(url , {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport const tokenFetchMultipart = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET') {\r\n        return fetch(url , {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n            body: data\r\n        });\r\n    }\r\n}","\r\n\r\nexport const types = {\r\n\r\n    uiSetError: '[UI] Set Error Form',\r\n    uiRemoveError: '[UI] Remove Error Form',\r\n    uiSetLoading: '[UI] Set Loading',\r\n    uiRemoveLoading: '[UI] Remove Loading',\r\n\r\n    authCheckingFinish: '[AUTH] finish checking login state',\r\n    authStartLogin: '[AUTH] Start login',\r\n    authStartRegister: '[AUTH] Start register',\r\n    authStartTokenRenew: '[AUTH] Start Renew Token',\r\n    authLogin: '[AUTH] login',\r\n    authRegister: '[AUTH] register',\r\n    authLogout: '[AUTH] logout',\r\n\r\n    imageStartUpload: '[IMG] Start Upload',\r\n    imageStartLoading: '[IMG] Start uploading image loading',\r\n    imageStartDeleted: '[IMG] Start deleted image',\r\n    imageDeleted: '[IMG] Image deleted',\r\n    imageUploaded: '[IMG] uploaded',\r\n    imageStartGet: '[IMG] Start Get Images',\r\n    imageGet: '[IMG] Get Images',\r\n    imageFilter: '[IMG] Apply Filter',\r\n    imagesLogout: '[IMG] Logout Images'\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiSetError = (msg) => ({ \r\n    type: types.uiSetError,\r\n    payload: msg\r\n});\r\n\r\nexport const uiSetLoading = () => ({type: types.uiSetLoading});\r\nexport const uiStopLoading = () => ({type: types.uiRemoveLoading});\r\n\r\nexport const uiRemoveError = () => ({ type: types.uiRemoveError});","import { tokenFetch, tokenFetchMultipart } from \"../services/fetch\"\r\nimport { uiStopLoading } from \"./ui\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const startImageUpload = ({img, title, description = ''}) => {\r\n    return async (dispatch, getState) => {\r\n        dispatch( startUploadingLoading() );\r\n        \r\n        const formData = new FormData();\r\n        formData.append('img', img[0]);\r\n        formData.append('title', title);\r\n        formData.append('description', description);\r\n\r\n        const resp = await tokenFetchMultipart('img/new', formData, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok) {\r\n            dispatch( imageUploaded(body.image) );\r\n            \r\n        } else {\r\n            alert(body.msg);\r\n        }\r\n        dispatch( uiStopLoading() )\r\n    }\r\n}\r\n\r\nexport const startGetImages = () => { \r\n\r\n    return async (dispatch) => {\r\n\r\n        const resp = await tokenFetch('img/');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok) {\r\n            dispatch( getImages(body.images) );  \r\n        } else {\r\n            console.log(body.msg)\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startDeleteImage = (image) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await tokenFetch(`img/${image}`, {}, 'DELETE');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok) {\r\n            dispatch( imageDeleted( image ) );\r\n        } else {\r\n            alert( body.msg )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst startUploadingLoading = () => ({\r\n    type: types.imageStartLoading\r\n});\r\n\r\nexport const startFilterImages = (value) => ({\r\n    type: types.imageFilter,\r\n    payload: value\r\n});\r\n\r\n\r\nconst imageUploaded = (image) => ({\r\n    type: types.imageUploaded,\r\n    payload: image\r\n});\r\n\r\nconst getImages = (images) => ({\r\n    type: types.imageGet,\r\n    payload: images\r\n});\r\n\r\nconst imageDeleted = (image) => ({\r\n    type: types.imageDeleted,\r\n    payload: image\r\n});\r\n\r\nexport const imagesLogout = () => ({type: types.imagesLogout});","import { simpleFetch, tokenFetch } from \"../services/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { imagesLogout } from \"./images\";\r\nimport { uiRemoveError, uiSetError, uiStopLoading } from \"./ui\";\r\n\r\nexport const startRegister = ({name, email, password}) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await simpleFetch('user/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n            dispatch( uiRemoveError() )\r\n        } else {\r\n            dispatch( uiSetError({\r\n                errorForm: {\r\n                    ok: true,\r\n                    msg: body.msg\r\n                }\r\n            }));\r\n        }\r\n        dispatch( uiStopLoading() );\r\n\r\n    }\r\n}\r\n\r\nexport const startLogin = ({email, password}) => {\r\n    return async (dispatch) => {\r\n    \r\n        const resp = await simpleFetch('user/login', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n      \r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n            dispatch( uiRemoveError() )\r\n        } else {\r\n            dispatch( uiSetError({\r\n                errorForm: {\r\n                    ok: true,\r\n                    msg: body.msg\r\n                }\r\n            }));\r\n        }\r\n        dispatch( uiStopLoading() );\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await tokenFetch('user/renew');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n        dispatch( imagesLogout() );\r\n    }\r\n}\r\n\r\nexport const checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\n\r\nexport const login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst logout = () => ({type: types.authLogout});\r\n","import React from 'react'\r\nimport './loading.css';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"container-loader\">\r\n           \r\n            <div className=\"grid\">\r\n                <div className=\"box box-1\"></div>\r\n                <div className=\"box box-2\"></div>\r\n                <div className=\"box box-3\"></div>\r\n                <div className=\"box box-4\"></div>\r\n                <div className=\"box box-5\"></div>\r\n                <div className=\"box box-6\"></div>\r\n                <div className=\"box box-7\"></div>\r\n                <div className=\"box box-8\"></div>\r\n                <div className=\"box box-9\"></div>\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style.sass';\r\nimport { Link } from 'react-router-dom';\r\nimport { startDeleteImage, startGetImages } from '../../actions/images';\r\n\r\nexport const HomePage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { images_filtered: images } = useSelector(state => state.images)\r\n    const [isSelected, setIsSelected] = useState(null)\r\n\r\n    useEffect( () => {\r\n        dispatch( startGetImages() );\r\n    }, [dispatch])\r\n\r\n    const handleSelecteImage = (id) => {\r\n        if(isSelected && isSelected === id) {\r\n            setIsSelected(null)\r\n        } else {\r\n            setIsSelected(id)\r\n        }\r\n    }\r\n\r\n    const handleDeleteImage = () => {\r\n        dispatch( startDeleteImage( isSelected ) );\r\n    } \r\n\r\n    return (\r\n        <div className=\"w-full flex py-24 mx-auto px-2 md:px-12\">\r\n            \r\n            <div className=\"masonry-gallery mx-auto \">\r\n                {\r\n                    images.map((img) => (\r\n                        <div \r\n                            key={img.asset_id} \r\n                            className=\"masonry-gallery-item relative\"\r\n                            onClick={ () => handleSelecteImage(img._id) }\r\n                        > \r\n                            <img \r\n                                src={img.img_path} \r\n                                alt={img.title} \r\n                                className={ `rounded  ${(isSelected === img._id) && 'is-selected'}` } /> \r\n\r\n                            {\r\n                                (isSelected && img._id === isSelected) \r\n                                    &&\r\n                                <button\r\n                                    className=\"bg-red-600 text-white h-8 w-8 absolute rounded-full cursor-pointer focus:outline-none\"\r\n                                    style={{top: '2%', right: '2%'}}\r\n                                    onClick={ handleDeleteImage }\r\n                                > \r\n                                    <i className=\"fas fa-trash\"></i>\r\n                                </button>                            \r\n                            }\r\n                                \r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <Link to=\"/upload\" className=\"bg-red-500  fixed bottom-0 delete-btn\"> \r\n                <i className=\"fas fa-plus\"></i>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Button = ({ text, ...props }) => {\r\n    return (\r\n        <button\r\n            className=\"py-3 bg-green-500 text-white w-full hover:bg-green-600 cursor-pointer rounded outline-none\" \r\n            {...props}\r\n        >\r\n\r\n            { text }\r\n            \r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { startLogin } from '../../actions/auth';\r\nimport { uiSetLoading } from '../../actions/ui';\r\nimport { Button } from '../../components/ui/Button';\r\n\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const { errorForm, loading } = useSelector(state => state.ui)\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, errors} = useForm();\r\n\r\n    const handleLogin = (data) => {\r\n        if(!loading) {\r\n            console.log('loading...');\r\n            dispatch( uiSetLoading() );\r\n            dispatch( startLogin(data) )\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"w-full h-screen flex bg-gray-400 \" >\r\n            \r\n            <div className=\"container mx-auto p-2 my-24\">\r\n                <div className=\"max-w-sm mx-auto bg-white px-5 py-10 rounded shadow-xl animate__animated animate__fadeInDown\">\r\n                    <div className=\"text-center mb-8\">\r\n                        <h1 className=\"font-bold text-2xl\" >Welcome to <span className=\"text-green-500\"> Images App </span> </h1>\r\n                        {\r\n                            (errorForm.ok) && <p className=\"text-red-400\" > { errorForm.msg } </p>\r\n                        }\r\n                    </div>\r\n                    <form onSubmit={ handleSubmit( handleLogin ) } >\r\n                      \r\n                        <div className=\"mt-5\">\r\n                            <label>Email</label>\r\n                            <input \r\n                                type=\"email\" \r\n                                className=\"block w-full p-2 border rounded border-gray-500 outline-none\" \r\n                                placeholder=\"example@emal.com\"\r\n                                autoComplete=\"off\"\r\n                                name=\"email\"\r\n                                ref={ register({\r\n                                    required: true,\r\n                                    pattern: {\r\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                        message: 'invalid email address'\r\n                                    }\r\n                                })}\r\n                            />\r\n                            <p className=\"text-red-500\" >\r\n                                { errors.email && 'invalid email address' } \r\n                            </p>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <label>Password</label>\r\n                            <input \r\n                                type=\"password\"\r\n                                placeholder=\"********\" \r\n                                className=\"block w-full p-2 border rounded border-gray-500 outline-none\" \r\n                                name=\"password\"\r\n                                ref={register({\r\n                                    required: true,\r\n                                    minLength: 6\r\n                                })}\r\n                            />\r\n                             <p className=\"text-red-500\" >\r\n                                { errors.password && 'Password must be at least 6 characters' } \r\n                            </p>\r\n                        </div>\r\n                        <div className=\"mt-10 text-center\">\r\n                           <Button text=\"Login\" />\r\n                           {\r\n                               loading && <i className=\"fas fa-spinner fa-spin mt-2\"></i>\r\n                           }\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <p className=\"text-gray-600\">\r\n                                Don't have an account? \r\n                                <Link to=\"/register\" className=\"text-green-400\" > Sign up here </Link>\r\n                           </p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { startRegister } from '../../actions/auth';\r\nimport { uiSetLoading } from '../../actions/ui';\r\nimport { Button } from '../../components/ui/Button';\r\n\r\nexport const RegisterPage = () => {\r\n\r\n    const { errorForm, loading } = useSelector(state => state.ui)\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, errors} = useForm();\r\n\r\n    const handleRegister = (data) => {\r\n        console.log('submit')\r\n        if(!loading) {\r\n            dispatch( uiSetLoading() );\r\n            dispatch( startRegister(data) )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"h-full  flex bg-gray-400 \" >\r\n            \r\n            <div className=\"container mx-auto p-2 my-20 \">\r\n                <div className=\"max-w-sm mx-auto bg-white px-5 py-10 rounded shadow-xl animate__animated animate__fadeInDown \">\r\n                    <div className=\"text-center mb-8\">\r\n                        <h1 className=\"font-bold text-2xl\" >Welcome to <span className=\"text-green-500\"> Images App </span> </h1>\r\n                        {\r\n                            (errorForm.ok) && <p className=\"text-red-400\" > { errorForm.msg } </p>\r\n                        }\r\n\r\n                    </div>\r\n                    <form onSubmit={ handleSubmit( handleRegister ) } >\r\n                        <div className=\"mt-5\">\r\n                            <label>Name</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"block w-full p-2 border rounded border-gray-500 outline-none\" \r\n                                placeholder=\"Name\"\r\n                                autoComplete=\"off\"\r\n                                name=\"name\"\r\n                                ref={ register({ required: true })}\r\n                            />\r\n                           \r\n                            <p className=\"text-red-500\" >\r\n                                {errors.name && 'The name is required'} \r\n                            </p>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <label>Email</label>\r\n                            <input \r\n                                type=\"email\" \r\n                                className=\"block w-full p-2 border rounded border-gray-500 outline-none\" \r\n                                placeholder=\"example@emal.com\"\r\n                                autoComplete=\"off\"\r\n                                name=\"email\"\r\n                                ref={ register({\r\n                                    required: true,\r\n                                    pattern: {\r\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                        message: 'invalid email address'\r\n                                    }\r\n                                })}\r\n                            />\r\n                            <p className=\"text-red-500\" >\r\n                                { errors.email && 'invalid email address' } \r\n                            </p>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <label>Password</label>\r\n                            <input \r\n                                type=\"password\"\r\n                                placeholder=\"********\" \r\n                                className=\"block w-full p-2 border rounded border-gray-500 outline-none\" \r\n                                name=\"password\"\r\n                                ref={register({\r\n                                    required: true,\r\n                                    minLength: 6\r\n                                })}\r\n                            />\r\n                             <p className=\"text-red-500\" >\r\n                                { errors.password && 'Password must be at least 6 characters' } \r\n                            </p>\r\n                        </div>\r\n                        <div className=\"mt-10 text-center\">\r\n                           <Button text=\"Sign Up\" />\r\n                           {\r\n                               loading && <i className=\"fas fa-spinner fa-spin mt-2\"></i>\r\n                           }\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <p className=\"text-gray-600\">\r\n                                Already have an account? <Link to=\"/login\" className=\"text-green-400\" > Login </Link>\r\n                           </p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useForm } from '../../../node_modules/react-hook-form/dist/index';\r\nimport { startImageUpload } from '../../actions/images';\r\nimport { uiSetLoading } from '../../actions/ui';\r\nimport { Button } from '../../components/ui/Button'\r\n\r\nexport const UploadPage = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui);\r\n    const { redirect } = useSelector(state => state.images);\r\n\r\n    const [imgPath, setImgPath] = useState(null);\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const handleSaveImage = (data) => {\r\n         \r\n\r\n        if(!loading && !!imgPath) {\r\n            dispatch( uiSetLoading() );\r\n            dispatch( startImageUpload(data) )\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    const handlePictureClick = () => {\r\n        document.getElementById('imgage_field').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file) {\r\n            setImgPath(window.URL.createObjectURL(file));\r\n        }\r\n    }\r\n\r\n    \r\n    if(redirect) {\r\n        return (\r\n            <Redirect to={redirect} />\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='w-full py-24 mx-auto px-1 md:px-12'>\r\n            <div className=\"flex flex-col md:flex-row \">\r\n                <div className=\"px-4 py-2 m-2 flex-1\">\r\n\r\n                    {\r\n                        !!!imgPath &&\r\n                        <div className=\"w-full h-full bg-gray-200 text-gray-600 flex flex-col justify-center items-center\">\r\n                            <i \r\n                                className=\"fas fa-upload fa-3x cursor-pointer\"\r\n                                onClick={ handlePictureClick }\r\n                                ></i>\r\n                                <p className=\"pt-2\">\r\n                                    Upload an image\r\n                                </p>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !!imgPath &&\r\n                        <div className=\"relative\" >\r\n                             <img \r\n                                src={ imgPath } \r\n                                alt=\"\"\r\n                                className=\"rounded shadow\" />\r\n                               <button\r\n                                    className=\"bg-red-600 text-white h-8 w-8 absolute rounded-full cursor-pointer focus:outline-none\"\r\n                                    style={{top: '-2%', right: '-2%'}}\r\n                                    onClick={() => !loading && setImgPath(null)}\r\n                                > \r\n                                    <i className=\"fas fa-times\"></i>\r\n                                </button>\r\n                        </div>\r\n                       \r\n                    }\r\n                   \r\n                </div>\r\n                <div className=\"m-2 flex-1 \">\r\n                    <form  onSubmit={ handleSubmit( handleSaveImage ) }  >\r\n                        <div className=\"w-full px-3 py-2\">\r\n                            <input \r\n                                type=\"file\" \r\n                                className=\"hidden\" \r\n                                id=\"imgage_field\"\r\n                                accept=\"image/*\"\r\n                                onChange={ handleFileChange }\r\n                                name=\"img\"\r\n                                ref={register({required: true})} />\r\n                                <p className=\"text-red-500\" >\r\n                                    { errors.img && 'The image is required' } \r\n                                </p>\r\n                        </div>\r\n                       \r\n                        <div className=\"w-full px-3 py-2\">\r\n                            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\r\n                                Title\r\n                            </label>\r\n                            <input \r\n                                className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \r\n                                type=\"text\" \r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Title\"\r\n                                name=\"title\"\r\n                                ref={register({required: true})} \r\n                            />\r\n                            <p className=\"text-red-500\" >\r\n                                { errors.title && 'Title is required' } \r\n                            </p>\r\n                        </div>\r\n                        <div className=\"w-full px-3 py-2\">\r\n                            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\r\n                                Description\r\n                            </label>\r\n                            <textarea \r\n                                className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \r\n                                 name=\"description\"\r\n                                 ref={ register() }\r\n                            ></textarea>\r\n                          \r\n                        </div>\r\n                        <div className=\"w-full px-3 py-2 text-center\">\r\n                            <Button text=\"Upload Image\" />\r\n                            {\r\n                               loading && <i className=\"fas fa-spinner fa-spin mt-2\"></i>\r\n                            }\r\n                        </div>  \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startFilterImages } from '../../actions/images';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = (e) => {\r\n        const val = e.target.value;\r\n        dispatch( startFilterImages(val) );\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex bg-white border-b border-gray-200 fixed top-0 inset-x-0 z-100 h-16 items-center\" style={{zIndex: '100'}}>\r\n            <div className=\"w-full max-w-screen-xl relative mx-auto px-6\">\r\n                <div className=\"flex items-center -mx-6\">\r\n                    <div className=\"lg:w-1/4 xl:w-1/5 pl-6 pr-6 lg:pr-8\" >\r\n                        <div className=\"flex items-center\">\r\n                            <Link to=\"/\" className=\"block lg:mr-4 font-bold\" >Images App</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-grow min-w-0 lg:2-3/4 xl:2-4/5\">\r\n                        <div className=\"w-full min-w-0 lg:px-6 xl:w-3/4 xl:px-12\">\r\n                            <div className=\"relative\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"transition-colors duration-100 ease-in-out text-gray-600 py-2 pr-4 pl-10 block w-full appearence-none leading-normal border boder-transparent rounded-log focus:outline-none text-left select-none truncate focus:bg-white focus:border-gray-300 bg-gray-200\"    \r\n                                    placeholder=\"Search\"\r\n                                    onChange={ handleInputChange } \r\n                                />\r\n                                <div className=\"pointer-events-none absolute inset-y-0 left-0 pl-4 flex items-center\">\r\n                                    <i  className=\"fas fa-search text-gray-600\" ></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"lg:flex lg:items-center lg:justify-between xl:w-1/4 px-6\">\r\n                            <div className=\"relative mr-4\">\r\n                                <button onClick={handleLogout} className=\"block lg:mr-4 text-red-600\" >Logout</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>        \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { Navbar } from '../components/navbar/Navbar';\r\n\r\nexport const PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\r\n  \r\n    return (\r\n        <>\r\n            <Navbar />\r\n             <Route \r\n                {...rest} \r\n                component={ (props) => (\r\n                    (isAuth)\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/login\" />\r\n                )}   \r\n            />\r\n        </>\r\n\r\n       \r\n    );\r\n    \r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({ isAuth, component: Component, ...rest }) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ (props) => (\r\n                (isAuth)\r\n                ? <Redirect to=\"/\" />\r\n                : <Component { ...props } />\r\n            )} \r\n        />\r\n        \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { Loading } from '../components/loading/Loading';\r\nimport { HomePage } from '../pages/home/HomePage';\r\nimport { LoginPage } from '../pages/login/LoginPage';\r\nimport { RegisterPage } from '../pages/register/RegisterPage';\r\nimport { UploadPage } from '../pages/upload/UploadPage';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch]);\r\n\r\n    if(checking) {\r\n        return (<Loading />);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute\r\n                        exct\r\n                        path=\"/login\"\r\n                        component={ LoginPage }\r\n                        isAuth={ !!uid }\r\n                    />\r\n                    <PublicRoute\r\n                        exct\r\n                        path=\"/register\"\r\n                        component={ RegisterPage }\r\n                        isAuth={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={ HomePage }\r\n                        isAuth={ !!uid }\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/upload\"\r\n                        component={ UploadPage }\r\n                        isAuth={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    images: [],\r\n    images_filtered: [],\r\n    uploading: false,\r\n    redirect: null\r\n}\r\n\r\n\r\nexport const imageReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.imageStartLoading:\r\n            return {\r\n                ...state,\r\n                uploading: true\r\n            }\r\n\r\n        case types.imageUploaded:\r\n            return {\r\n                ...state,\r\n                images: [...state.images, action.payload],\r\n                images_filtered: [...state.images, action.payload],\r\n                uploading: false,\r\n                redirect: '/'\r\n            }\r\n\r\n        case types.imageDeleted:\r\n            return {\r\n                ...state,\r\n                images: state.images.filter(\r\n                    i => (i._id !== action.payload)\r\n                ),\r\n                images_filtered: state.images_filtered.filter(\r\n                    i => (i._id !== action.payload)\r\n                )\r\n            }\r\n    \r\n        case types.imageGet:\r\n            return {\r\n                ...state,\r\n                images: [...action.payload],\r\n                images_filtered: [...action.payload],\r\n                redirect: null\r\n            }\r\n        \r\n        case types.imageFilter:\r\n            const value = action.payload.toLowerCase();\r\n            const filtered = state.images.filter((val) => val.title.toLowerCase().includes(value));\r\n            return {\r\n                ...state,\r\n                images_filtered: filtered\r\n            }\r\n\r\n        case types.imagesLogout:\r\n            return initState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    errorForm: {\r\n        ok: false,\r\n        msg: null\r\n    },\r\n    loading: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n       \r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return initialState;\r\n        \r\n        case types.uiSetLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiRemoveLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { imageReducer } from \"./imageReducr\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    images: imageReducer,\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routes/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const ImagesCrudApp = () => {\r\n\r\n    return (\r\n\r\n        <Provider store={ store }  >\r\n            <AppRouter />\r\n        </Provider>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ImagesCrudApp } from './ImagesCrudApp';\n\nReactDOM.render(\n  <ImagesCrudApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}